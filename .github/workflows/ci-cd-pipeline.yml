name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - "**" # Trigger for all branches, including non-main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.5"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.5"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Run tests
        run: |
          pytest --nomigrations -v

  dockerhub:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' # This job only runs on the main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t python-oc-lettings-fr:latest .

      - name: Tag Docker Image
        run: |
          docker tag python-oc-lettings-fr:latest ${{ secrets.DOCKER_USERNAME }}/python-oc-lettings-fr:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-oc-lettings-fr:latest

  deploy:
    runs-on: ubuntu-latest
    needs: dockerhub
    if: github.ref == 'refs/heads/main' # This job only runs on the main branch
    steps:
      - name: Trigger Render Deployment
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
          -H "Authorization: Bearer ${RENDER_API_KEY}" \
          -H "Content-Type: application/json"
